create database fot;


use fot;


CREATE TABLE userAccount (
    user_id CHAR(7) PRIMARY KEY,
    user_name VARCHAR(50) NOT NULL,
    email VARCHAR(60) UNIQUE NOT NULL,
    roll VARCHAR(30),
    phoneNumber VARCHAR(10), 
    address VARCHAR(60),
    depName VARCHAR(20),
    password VARCHAR(255) NOT NULL, 
    profilePic VARCHAR(100)
);
 --update the notice
CREATE TABLE notice (
    notice_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(50) NOT NULL,
    postedDay DATE NOT NULL,
    content VARCHAR(100),
    userRoll VARCHAR(10)
)AUTO_INCREMENT=1000;


--update the timetable
CREATE TABLE timeTable (
    timeTable_id CHAR(7) PRIMARY KEY,
    caption VARCHAR(50) NOT NULL,
    submittedDate DATE NOT NULL,
    content BLOB,
    depName VARCHAR(20)
);

CREATE TABLE caMarks (
    studentId CHAR(7) NOT NULL,
    courseId CHAR(7) NOT NULL,
    q1_mark DECIMAL(5,2),
    q2_mark DECIMAL(5,2),
    q3_mark DECIMAL(5,2),
    q_total DECIMAL(5,2),
    assessment_mark1 DECIMAL(5,2),
	assessment_mark2 DECIMAL(5,2),
	assessment_total DECIMAL(5,2),
    mid_mark DECIMAL(5,2),
    total_ca DECIMAL(5,2),
    eligibility CHAR(6),
    PRIMARY KEY (studentId, courseId),
    FOREIGN KEY (studentId) REFERENCES userAccount(user_id) ON DELETE CASCADE,
    FOREIGN KEY (courseId) REFERENCES courseUnit(courseId) ON DELETE CASCADE
);

CREATE TABLE finalMarks (
    mark_id INT AUTO_INCREMENT UNIQUE,
    studentId CHAR(7) NOT NULL,
    courseId CHAR(7) NOT NULL,
    finalPractical DECIMAL(5,2),
    finalTheory DECIMAL(5,2),
    finalTotal DECIMAL(5,2),
    grade CHAR(2),
    cgpa DECIMAL(4,2),
    sgpa DECIMAL(4,2),
    PRIMARY KEY (studentId, courseId),
    FOREIGN KEY (studentId) REFERENCES userAccount(user_id) ON DELETE CASCADE,
    FOREIGN KEY (courseId) REFERENCES courseUnit(courseId) ON DELETE CASCADE
);

CREATE TABLE exam_medical (
    medical_id INT AUTO_INCREMENT PRIMARY KEY,
    studentId CHAR(7) NOT NULL,
    courseId CHAR(7) NOT NULL,
    medicalDate DATE NOT NULL,
    description VARCHAR(255),
    status VARCHAR(20),
    UNIQUE (studentId, courseId),
    FOREIGN KEY (studentId) REFERENCES userAccount(user_id) ON DELETE CASCADE,
    FOREIGN KEY (courseId) REFERENCES courseUnit(courseId) ON DELETE CASCADE
);

CREATE TABLE attendence_medical (
    medical_id INT AUTO_INCREMENT PRIMARY KEY,
    studentId CHAR(7) NOT NULL,
    courseId CHAR(7) NOT NULL,
    medicalDate DATE NOT NULL,
    description VARCHAR(255),
    status VARCHAR(20),
    UNIQUE (studentId, courseId),
    FOREIGN KEY (studentId) REFERENCES userAccount(user_id) ON DELETE CASCADE,
    FOREIGN KEY (courseId) REFERENCES courseUnit(courseId) ON DELETE CASCADE
);


CREATE TABLE attendance (
    attendance_id INT AUTO_INCREMENT PRIMARY KEY,
    studentId CHAR(7) NOT NULL,
    courseId CHAR(7) NOT NULL,
    attendanceType VARCHAR(20) NOT NULL,
    date DATE NOT NULL,
    status VARCHAR(20),
    UNIQUE (studentId, courseId, attendanceType),
    FOREIGN KEY (studentId) REFERENCES userAccount(user_id) ON DELETE CASCADE,
    FOREIGN KEY (courseId) REFERENCES courseUnit(courseId) ON DELETE CASCADE
);

CREATE TABLE courseUnit (
    courseId CHAR(7) PRIMARY KEY,
    courseName VARCHAR(40) NOT NULL,
    credit INT NOT NULL,
    cType VARCHAR(20),
    nuOfQuises INT,
    nuOfAssesments INT,
    ca_percentage INT,
    lectureIncharge VARCHAR(40),
    gpa_state VARCHAR(5),
    CONSTRAINT fk_lectureIncharge 
    FOREIGN KEY (lectureIncharge) REFERENCES userAccount(user_id) ON DELETE CASCADE
);

CREATE TABLE attendance (
    Att_id INT PRIMARY KEY AUTO_INCREMENT,
    Att_stu_id CHAR(8) NOT NULL,
    Att_cou_id CHAR(8) NOT NULL,
    Pre_date DATE,
    Pre_time TIME,
    Lec_hours INT,
    Lec_type CHAR(2),
    Statu CHAR(2) NOT NULL,
    Att_medi_id CHAR(8),
    FOREIGN KEY (Att_stu_id) REFERENCES userAccount(student_id) ON UPDATE CASCADE,
    FOREIGN KEY (Att_cou_id) REFERENCES courseunit(courseId) ON UPDATE CASCADE,
    FOREIGN KEY (Att_medi_id) REFERENCES attendence_medical(medical_id) ON UPDATE CASCADE
);





CREATE TABLE student_course (
    courseId CHAR(7) NOT NULL,
    studentId VARCHAR(7) NOT NULL,
    PRIMARY KEY (courseId, studentId),
    FOREIGN KEY (courseId) REFERENCES courseUnit(courseId) ON DELETE CASCADE,
    FOREIGN KEY (studentId) REFERENCES userAccount(user_id) ON DELETE CASCADE
);

CREATE TABLE lecture_course (
    lecId CHAR(7) NOT NULL,
    courseId CHAR(7) NOT NULL,
    PRIMARY KEY (lecId, studentId),
    FOREIGN KEY (courseId) REFERENCES courseUnit(courseId) ON DELETE CASCADE,
    FOREIGN KEY (studentId) REFERENCES userAccount(user_id) ON DELETE CASCADE
);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

INSERT INTO caMarks (
    studentId, courseId,
    q1_mark, q2_mark, q3_mark, q_total,
    assessment_mark1, assessment_mark2, assessment_total,
    mid_mark, total_ca, eligibility
) VALUES 
('TG1301', 'ICT2113', 7.5, 8.0, 9.0, NULL, 14.0, 13.5, 27.5, 18.0, NULL, NULL),
('TG1302', 'ICT2122', 6.0, 7.5, 8.0, NULL, 12.0, 11.5, 23.5, 16.0, NULL, NULL),
('TG1303', 'ICT2133', 8.5, 9.0, 7.0, NULL, 13.5, 14.0, 27.5, 17.0, NULL, NULL),
('TG1304', 'ICT2142', 9.0, 9.5, 9.0, NULL, 14.5, 14.5, 29.0, 19.0, NULL, NULL),
('TG1305', 'ICT2152', 5.5, 6.0, 7.5, NULL, 10.0, 12.0, 22.0, 15.0, NULL, NULL);

INSERT INTO userAccount (
    user_id, user_name, email, roll, phoneNumber, address, depName, password, profilePic
) VALUES 
('TG1301', 'Nimal Perera', 'nimalp@example.com', 'Student', '0712345678', '123 Galle Road', 'IT', 'password123', NULL),
('TG1302', 'Sunil Silva', 'sunils@example.com', 'Student', '0723456789', '456 Matara Road', 'IT', 'password123', NULL),
('TG1303', 'Kamal Fernando', 'kamalf@example.com', 'Student', '0774567890', '789 Kandy Street', 'CS', 'password123', NULL),
('TG1304', 'Amali Jayasuriya', 'amalij@example.com', 'Student', '0756789012', '321 Colombo Road', 'CS', 'password123', NULL),
('TG1305', 'Dilani Ranatunga', 'dilanir@example.com', 'Student', '0785678901', '654 Kurunegala Lane', 'SE', 'password123', NULL);


INSERT INTO finalMarks (studentId, courseId, finalPractical, finalTheory, finalTotal, grade, cgpa, sgpa)
VALUES 
('TG1301', 'ICT2113', 18.0, 52.0, 70.0, 'B', 3.20, 3.10),
('TG1302', 'ICT2122', 15.0, 45.0, 60.0, 'C', 2.80, 2.70),
('TG1303', 'ICT2133', 17.0, 56.0, 73.0, 'B+', 3.40, 3.30),
('TG1304', 'ICT2142', 19.0, 59.0, 78.0, 'A-', 3.60, 3.50),
('TG1305', 'ICT2152', 14.0, 48.0, 62.0, 'C+', 2.90, 2.85);


INSERT INTO attendence_medical (studentId, courseId, medicalDate, description, status)
VALUES 
('TG1302', 'ICT2113', '2025-04-10', 'Fever and flu symptoms', 'Pending'),

('TG1303', 'ICT2113', '2025-04-12', 'Injury due to accident', 'Approved'),

('TG1302', 'ICT2152', '2025-04-15', 'Hospitalized for surgery', 'Rejected');


--------------dta for course---
INSERT INTO courseUnit (courseId, courseName, credit, cType, nuOfQuises, nuOfAssesments, ca_percentage, lectureIncharge, gpa_state) VALUES
('ICT2113', 'Introduction to Programming', 3, 'Both', 3, 0, 30, 'L001', 'Yes'),
('ICT2122', 'Database Systems', 2, 'Theory', 4, 1, 40, 'L002', 'Yes'),
('ICT2133', 'Web Technologies', 3, 'Both', 3, 2, 30, 'L003', 'Yes'),
('ICT2142', 'Data Structures', 2, 'Practical', 0, 1, 40, 'L004', 'Yes'),
('ICT2152', 'Computer Networks', 2, 'Theory', 3, 2, 30, 'L005', 'Yes');





